#!/usr/bin/env python3

import os
import time

#Файлы и катологи, к-е необходимо скопировать, заносим их в список
source = ['/home/vlad/rezerv/osn', '/home/vlad/rezerv/osn1']

#Указываем каталоги где будет храниться backup, заносим их в список
target_dir = ['/home/vlad/rezerv/backup', '/home/vlad/rezerv/backup1']

#Дата будут в виде подкатологов в основных катологах, переменная "day" будет содержать переменную с папками (backup).
#os.sep – она содержит разделитель пути для конкретной операционной системы, 
#т.е. он будет '/' в GNU/Linux и Unix3, '\\' в Windows и ':' в Mac OS. 
#Использование os.sep вместо этих символов напрямую делает программу переносимой, и она сможет работать на всех этих операционных системах.
#Функция time.strftime() принимает в качестве аргумента формат вывода времени
for i in range(0, 2):
    day = target_dir[i] + os.sep + time.strftime('%d') + '.' + time.strftime('%m')+ '.' + time.strftime('%Y')
    
    #Имя архива будет состоять из времени в которое он был скопирован
    now = time.strftime('%H') + ':' + time.strftime('%M') + ':' + time.strftime('%S')
    
    # Запрашиваем комментарий пользователя для имени файла
    comment = input('Введите ваш комментарий к резевной копии: ')
    if len(comment) != 0: #Проверка введен ли комментарий
        target = day + os.sep + now + '_' + comment.replace(' ', '_')  + '.zip'
    else:
        target = day + os.sep + now + '.zip'
    
    # Создаём каталог, если его ещё нет
    if not os.path.exists(day):
        os.mkdir(day)
        print('Каталог', day,' успешно создан')
    
    #Используем команду "zip" для помещения файлов в zip-архив
    #Параметр “-q” используется для указания, что команда должна сработать тихо. 
    #Параметр “-r” обозначает, что команда архивации должна работать рекурсивно для каталогов, 
    #т.е. должна включать все подкаталоги и файлы.
    #Метод join- превращает (объединяет) список в строку
    #zip_command = "zip -qr {0} {1} {2}".format(target, '_'.join(source[i]))
    zip_command = "zip -qr " + target + " " + source[i]
    print(zip_command)
    
    # Запускаем создание резервной копии
    #os.system()- функция которая запускает команду так, как будто она была запущена из системы, т.е. изкомандной оболочки
    if os.system(zip_command) == 0:
        print('Резервная копия успешно создана в', target)
    else:
        print('Создание резервной копии НЕ УДАЛОСЬ')
    
    

